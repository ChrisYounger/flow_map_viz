{"version":3,"file":"app.js","sources":["../src/Application.js","../src/ResizePlugin.js","../src/index.js"],"sourcesContent":["import { Container } from '@pixi/display';\nimport { autoDetectRenderer } from '@pixi/core';\n\n/**\n * Convenience class to create a new PIXI application.\n *\n * This class automatically creates the renderer, ticker and root container.\n *\n * @example\n * // Create the application\n * const app = new PIXI.Application();\n *\n * // Add the view to the DOM\n * document.body.appendChild(app.view);\n *\n * // ex, add display objects\n * app.stage.addChild(PIXI.Sprite.from('something.png'));\n *\n * @class\n * @memberof PIXI\n */\nexport class Application\n{\n    /**\n     * @param {object} [options] - The optional renderer parameters.\n     * @param {boolean} [options.autoStart=true] - Automatically starts the rendering after the construction.\n     *     **Note**: Setting this parameter to false does NOT stop the shared ticker even if you set\n     *     options.sharedTicker to true in case that it is already started. Stop it by your own.\n     * @param {number} [options.width=800] - The width of the renderers view.\n     * @param {number} [options.height=600] - The height of the renderers view.\n     * @param {HTMLCanvasElement} [options.view] - The canvas to use as a view, optional.\n     * @param {boolean} [options.transparent=false] - If the render view is transparent.\n     * @param {boolean} [options.autoDensity=false] - Resizes renderer view in CSS pixels to allow for\n     *   resolutions other than 1.\n     * @param {boolean} [options.antialias=false] - Sets antialias\n     * @param {boolean} [options.preserveDrawingBuffer=false] - Enables drawing buffer preservation, enable this if you\n     *  need to call toDataUrl on the WebGL context.\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer, retina would be 2.\n     * @param {boolean} [options.forceCanvas=false] - prevents selection of WebGL renderer, even if such is present, this\n     *   option only is available when using **pixi.js-legacy** or **@pixi/canvas-renderer** modules, otherwise\n     *   it is ignored.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n     *   not before the new render pass.\n     * @param {boolean} [options.forceFXAA=false] - Forces FXAA antialiasing to be used over native.\n     *  FXAA is faster, but may not always look as great. **(WebGL only)**.\n     * @param {string} [options.powerPreference] - Parameter passed to webgl context, set to \"high-performance\"\n     *  for devices with dual graphics card. **(WebGL only)**.\n     * @param {boolean} [options.sharedTicker=false] - `true` to use PIXI.Ticker.shared, `false` to create new ticker.\n     *  If set to false, you cannot register a handler to occur before anything that runs on the shared ticker.\n     *  The system ticker will always run before both the shared ticker and the app ticker.\n     * @param {boolean} [options.sharedLoader=false] - `true` to use PIXI.Loader.shared, `false` to create new Loader.\n     * @param {Window|HTMLElement} [options.resizeTo] - Element to automatically resize stage to.\n     */\n    constructor(options)\n    {\n        // The default options\n        options = Object.assign({\n            forceCanvas: false,\n        }, options);\n\n        /**\n         * WebGL renderer if available, otherwise CanvasRenderer.\n         * @member {PIXI.Renderer|PIXI.CanvasRenderer}\n         */\n        this.renderer = autoDetectRenderer(options);\n\n        /**\n         * The root display container that's rendered.\n         * @member {PIXI.Container}\n         */\n        this.stage = new Container();\n\n        // install plugins here\n        Application._plugins.forEach((plugin) =>\n        {\n            plugin.init.call(this, options);\n        });\n    }\n\n    /**\n     * Register a middleware plugin for the application\n     * @static\n     * @param {PIXI.Application.Plugin} plugin - Plugin being installed\n     */\n    static registerPlugin(plugin)\n    {\n        Application._plugins.push(plugin);\n    }\n\n    /**\n     * Render the current stage.\n     */\n    render()\n    {\n        this.renderer.render(this.stage);\n    }\n\n    /**\n     * Reference to the renderer's canvas element.\n     * @member {HTMLCanvasElement}\n     * @readonly\n     */\n    get view()\n    {\n        return this.renderer.view;\n    }\n\n    /**\n     * Reference to the renderer's screen rectangle. Its safe to use as `filterArea` or `hitArea` for the whole screen.\n     * @member {PIXI.Rectangle}\n     * @readonly\n     */\n    get screen()\n    {\n        return this.renderer.screen;\n    }\n\n    /**\n     * Destroy and don't use after this.\n     * @param {Boolean} [removeView=false] Automatically remove canvas from DOM.\n     * @param {object|boolean} [stageOptions] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [stageOptions.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'stageOptions' will be passed on to those calls.\n     * @param {boolean} [stageOptions.texture=false] - Only used for child Sprites if stageOptions.children is set\n     *  to true. Should it destroy the texture of the child sprite\n     * @param {boolean} [stageOptions.baseTexture=false] - Only used for child Sprites if stageOptions.children is set\n     *  to true. Should it destroy the base texture of the child sprite\n     */\n    destroy(removeView, stageOptions)\n    {\n        // Destroy plugins in the opposite order\n        // which they were constructed\n        const plugins = Application._plugins.slice(0);\n\n        plugins.reverse();\n        plugins.forEach((plugin) =>\n        {\n            plugin.destroy.call(this);\n        });\n\n        this.stage.destroy(stageOptions);\n        this.stage = null;\n\n        this.renderer.destroy(removeView);\n        this.renderer = null;\n\n        this._options = null;\n    }\n}\n\n/**\n * @memberof PIXI.Application\n * @typedef {object} Plugin\n * @property {function} init - Called when Application is constructed, scoped to Application instance.\n *  Passes in `options` as the only argument, which are Application constructor options.\n * @property {function} destroy - Called when destroying Application, scoped to Application instance\n */\n\n/**\n * Collection of installed plugins.\n * @static\n * @private\n * @type {PIXI.Application.Plugin[]}\n */\nApplication._plugins = [];\n","/**\n * Middleware for for Application's resize functionality\n * @private\n * @class\n */\nexport class ResizePlugin\n{\n    /**\n     * Initialize the plugin with scope of application instance\n     * @static\n     * @private\n     * @param {object} [options] - See application options\n     */\n    static init(options)\n    {\n        /**\n         * The element or window to resize the application to.\n         * @type {Window|HTMLElement}\n         * @name resizeTo\n         * @memberof PIXI.Application#\n         */\n        Object.defineProperty(this, 'resizeTo',\n            {\n                set(dom)\n                {\n                    window.removeEventListener('resize', this.resize);\n                    this._resizeTo = dom;\n                    if (dom)\n                    {\n                        window.addEventListener('resize', this.resize);\n                        this.resize();\n                    }\n                },\n                get()\n                {\n                    return this._resizeTo;\n                },\n            });\n\n        /**\n         * If `resizeTo` is set, calling this function\n         * will resize to the width and height of that element.\n         * @method PIXI.Application#resize\n         */\n        this.resize = () =>\n        {\n            if (this._resizeTo)\n            {\n                // Resize to the window\n                if (this._resizeTo === window)\n                {\n                    this.renderer.resize(\n                        window.innerWidth,\n                        window.innerHeight\n                    );\n                }\n                // Resize to other HTML entities\n                else\n                {\n                    this.renderer.resize(\n                        this._resizeTo.clientWidth,\n                        this._resizeTo.clientHeight\n                    );\n                }\n            }\n        };\n\n        // On resize\n        this._resizeTo = null;\n        this.resizeTo = options.resizeTo || null;\n    }\n\n    /**\n     * Clean up the ticker, scoped to application\n     * @static\n     * @private\n     */\n    static destroy()\n    {\n        this.resizeTo = null;\n        this.resize = null;\n    }\n}\n","import { Application } from './Application';\nimport { ResizePlugin } from './ResizePlugin';\n\nApplication.registerPlugin(ResizePlugin);\n\nexport { Application };\n"],"names":["autoDetectRenderer","Container","this","const"],"mappings":"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"}