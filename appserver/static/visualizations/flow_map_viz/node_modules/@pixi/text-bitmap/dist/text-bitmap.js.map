{"version":3,"file":"text-bitmap.js","sources":["../src/BitmapText.js","../src/BitmapFontLoader.js"],"sourcesContent":["import { Texture } from '@pixi/core';\nimport { Container } from '@pixi/display';\nimport { ObservablePoint, Point, Rectangle } from '@pixi/math';\nimport { settings } from '@pixi/settings';\nimport { Sprite } from '@pixi/sprite';\nimport { removeItems, getResolutionOfUrl } from '@pixi/utils';\n\n/**\n * A BitmapText object will create a line or multiple lines of text using bitmap font.\n *\n * The primary advantage of this class over Text is that all of your textures are pre-generated and loading,\n * meaning that rendering is fast, and changing text has no performance implications.\n *\n * The primary disadvantage is that you need to preload the bitmap font assets, and thus the styling is set in stone.\n * Supporting character sets other than latin, such as CJK languages, may be impractical due to the number of characters.\n *\n * To split a line you can use '\\n', '\\r' or '\\r\\n' in your string.\n *\n * You can generate the fnt files using\n * http://www.angelcode.com/products/bmfont/ for Windows or\n * http://www.bmglyph.com/ for Mac.\n *\n * A BitmapText can only be created when the font is loaded.\n *\n * ```js\n * // in this case the font is in a file called 'desyrel.fnt'\n * let bitmapText = new PIXI.BitmapText(\"text using a fancy font!\", {font: \"35px Desyrel\", align: \"right\"});\n * ```\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\nexport class BitmapText extends Container\n{\n    /**\n     * @param {string} text - A string that you would like the text to display.\n     * @param {object} style - The style parameters.\n     * @param {string|object} style.font - The font descriptor for the object, can be passed as a string of form\n     *      \"24px FontName\" or \"FontName\" or as an object with explicit name/size properties.\n     * @param {string} [style.font.name] - The bitmap font id.\n     * @param {number} [style.font.size] - The size of the font in pixels, e.g. 24\n     * @param {string} [style.align='left'] - Alignment for multiline text ('left', 'center' or 'right'), does not affect\n     *      single line text.\n     * @param {number} [style.tint=0xFFFFFF] - The tint color.\n     */\n    constructor(text, style = {})\n    {\n        super();\n\n        /**\n         * Private tracker for the width of the overall text\n         *\n         * @member {number}\n         * @private\n         */\n        this._textWidth = 0;\n\n        /**\n         * Private tracker for the height of the overall text\n         *\n         * @member {number}\n         * @private\n         */\n        this._textHeight = 0;\n\n        /**\n         * Private tracker for the letter sprite pool.\n         *\n         * @member {PIXI.Sprite[]}\n         * @private\n         */\n        this._glyphs = [];\n\n        /**\n         * Private tracker for the current style.\n         *\n         * @member {object}\n         * @private\n         */\n        this._font = {\n            tint: style.tint !== undefined ? style.tint : 0xFFFFFF,\n            align: style.align || 'left',\n            name: null,\n            size: 0,\n        };\n\n        /**\n         * Private tracker for the current font.\n         *\n         * @member {object}\n         * @private\n         */\n        this.font = style.font; // run font setter\n\n        /**\n         * Private tracker for the current text.\n         *\n         * @member {string}\n         * @private\n         */\n        this._text = text;\n\n        /**\n         * The max width of this bitmap text in pixels. If the text provided is longer than the\n         * value provided, line breaks will be automatically inserted in the last whitespace.\n         * Disable by setting value to 0\n         *\n         * @member {number}\n         * @private\n         */\n        this._maxWidth = 0;\n\n        /**\n         * The max line height. This is useful when trying to use the total height of the Text,\n         * ie: when trying to vertically align.\n         *\n         * @member {number}\n         * @private\n         */\n        this._maxLineHeight = 0;\n\n        /**\n         * Letter spacing. This is useful for setting the space between characters.\n         * @member {number}\n         * @private\n         */\n        this._letterSpacing = 0;\n\n        /**\n         * Text anchor. read-only\n         *\n         * @member {PIXI.ObservablePoint}\n         * @private\n         */\n        this._anchor = new ObservablePoint(() => { this.dirty = true; }, this, 0, 0);\n\n        /**\n         * The dirty state of this object.\n         *\n         * @member {boolean}\n         */\n        this.dirty = false;\n\n        /**\n         * If true PixiJS will Math.floor() x/y values when rendering, stopping pixel interpolation.\n         * Advantages can include sharper image quality (like text) and faster rendering on canvas.\n         * The main disadvantage is movement of objects may appear less smooth.\n         * To set the global default, change {@link PIXI.settings.ROUND_PIXELS}\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.roundPixels = settings.ROUND_PIXELS;\n\n        this.updateText();\n    }\n\n    /**\n     * Renders text and updates it when needed\n     *\n     * @private\n     */\n    updateText()\n    {\n        const data = BitmapText.fonts[this._font.name];\n        const scale = this._font.size / data.size;\n        const pos = new Point();\n        const chars = [];\n        const lineWidths = [];\n        const text = this._text.replace(/(?:\\r\\n|\\r)/g, '\\n') || ' ';\n        const textLength = text.length;\n        const maxWidth = this._maxWidth * data.size / this._font.size;\n\n        let prevCharCode = null;\n        let lastLineWidth = 0;\n        let maxLineWidth = 0;\n        let line = 0;\n        let lastBreakPos = -1;\n        let lastBreakWidth = 0;\n        let spacesRemoved = 0;\n        let maxLineHeight = 0;\n\n        for (let i = 0; i < textLength; i++)\n        {\n            const charCode = text.charCodeAt(i);\n            const char = text.charAt(i);\n\n            if ((/(?:\\s)/).test(char))\n            {\n                lastBreakPos = i;\n                lastBreakWidth = lastLineWidth;\n            }\n\n            if (char === '\\r' || char === '\\n')\n            {\n                lineWidths.push(lastLineWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n                ++line;\n                ++spacesRemoved;\n\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n                continue;\n            }\n\n            const charData = data.chars[charCode];\n\n            if (!charData)\n            {\n                continue;\n            }\n\n            if (prevCharCode && charData.kerning[prevCharCode])\n            {\n                pos.x += charData.kerning[prevCharCode];\n            }\n\n            chars.push({\n                texture: charData.texture,\n                line,\n                charCode,\n                position: new Point(pos.x + charData.xOffset + (this._letterSpacing / 2), pos.y + charData.yOffset),\n            });\n            pos.x += charData.xAdvance + this._letterSpacing;\n            lastLineWidth = pos.x;\n            maxLineHeight = Math.max(maxLineHeight, (charData.yOffset + charData.texture.height));\n            prevCharCode = charCode;\n\n            if (lastBreakPos !== -1 && maxWidth > 0 && pos.x > maxWidth)\n            {\n                ++spacesRemoved;\n                removeItems(chars, 1 + lastBreakPos - spacesRemoved, 1 + i - lastBreakPos);\n                i = lastBreakPos;\n                lastBreakPos = -1;\n\n                lineWidths.push(lastBreakWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastBreakWidth);\n                line++;\n\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n            }\n        }\n\n        const lastChar = text.charAt(text.length - 1);\n\n        if (lastChar !== '\\r' && lastChar !== '\\n')\n        {\n            if ((/(?:\\s)/).test(lastChar))\n            {\n                lastLineWidth = lastBreakWidth;\n            }\n\n            lineWidths.push(lastLineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n        }\n\n        const lineAlignOffsets = [];\n\n        for (let i = 0; i <= line; i++)\n        {\n            let alignOffset = 0;\n\n            if (this._font.align === 'right')\n            {\n                alignOffset = maxLineWidth - lineWidths[i];\n            }\n            else if (this._font.align === 'center')\n            {\n                alignOffset = (maxLineWidth - lineWidths[i]) / 2;\n            }\n\n            lineAlignOffsets.push(alignOffset);\n        }\n\n        const lenChars = chars.length;\n        const tint = this.tint;\n\n        for (let i = 0; i < lenChars; i++)\n        {\n            let c = this._glyphs[i]; // get the next glyph sprite\n\n            if (c)\n            {\n                c.texture = chars[i].texture;\n            }\n            else\n            {\n                c = new Sprite(chars[i].texture);\n                c.roundPixels = this.roundPixels;\n                this._glyphs.push(c);\n            }\n\n            c.position.x = (chars[i].position.x + lineAlignOffsets[chars[i].line]) * scale;\n            c.position.y = chars[i].position.y * scale;\n            c.scale.x = c.scale.y = scale;\n            c.tint = tint;\n\n            if (!c.parent)\n            {\n                this.addChild(c);\n            }\n        }\n\n        // remove unnecessary children.\n        for (let i = lenChars; i < this._glyphs.length; ++i)\n        {\n            this.removeChild(this._glyphs[i]);\n        }\n\n        this._textWidth = maxLineWidth * scale;\n        this._textHeight = (pos.y + data.lineHeight) * scale;\n\n        // apply anchor\n        if (this.anchor.x !== 0 || this.anchor.y !== 0)\n        {\n            for (let i = 0; i < lenChars; i++)\n            {\n                this._glyphs[i].x -= this._textWidth * this.anchor.x;\n                this._glyphs[i].y -= this._textHeight * this.anchor.y;\n            }\n        }\n        this._maxLineHeight = maxLineHeight * scale;\n    }\n\n    /**\n     * Updates the transform of this object\n     *\n     * @private\n     */\n    updateTransform()\n    {\n        this.validate();\n        this.containerUpdateTransform();\n    }\n\n    /**\n     * Validates text before calling parent's getLocalBounds\n     *\n     * @return {PIXI.Rectangle} The rectangular bounding area\n     */\n    getLocalBounds()\n    {\n        this.validate();\n\n        return super.getLocalBounds();\n    }\n\n    /**\n     * Updates text when needed\n     *\n     * @private\n     */\n    validate()\n    {\n        if (this.dirty)\n        {\n            this.updateText();\n            this.dirty = false;\n        }\n    }\n\n    /**\n     * The tint of the BitmapText object.\n     *\n     * @member {number}\n     */\n    get tint()\n    {\n        return this._font.tint;\n    }\n\n    set tint(value) // eslint-disable-line require-jsdoc\n    {\n        this._font.tint = (typeof value === 'number' && value >= 0) ? value : 0xFFFFFF;\n\n        this.dirty = true;\n    }\n\n    /**\n     * The alignment of the BitmapText object.\n     *\n     * @member {string}\n     * @default 'left'\n     */\n    get align()\n    {\n        return this._font.align;\n    }\n\n    set align(value) // eslint-disable-line require-jsdoc\n    {\n        this._font.align = value || 'left';\n\n        this.dirty = true;\n    }\n\n    /**\n     * The anchor sets the origin point of the text.\n     *\n     * The default is `(0,0)`, this means the text's origin is the top left.\n     *\n     * Setting the anchor to `(0.5,0.5)` means the text's origin is centered.\n     *\n     * Setting the anchor to `(1,1)` would mean the text's origin point will be the bottom right corner.\n     *\n     * @member {PIXI.Point | number}\n     */\n    get anchor()\n    {\n        return this._anchor;\n    }\n\n    set anchor(value) // eslint-disable-line require-jsdoc\n    {\n        if (typeof value === 'number')\n        {\n            this._anchor.set(value);\n        }\n        else\n        {\n            this._anchor.copyFrom(value);\n        }\n    }\n\n    /**\n     * The font descriptor of the BitmapText object.\n     *\n     * @member {object}\n     */\n    get font()\n    {\n        return this._font;\n    }\n\n    set font(value) // eslint-disable-line require-jsdoc\n    {\n        if (!value)\n        {\n            return;\n        }\n\n        if (typeof value === 'string')\n        {\n            value = value.split(' ');\n\n            this._font.name = value.length === 1 ? value[0] : value.slice(1).join(' ');\n            this._font.size = value.length >= 2 ? parseInt(value[0], 10) : BitmapText.fonts[this._font.name].size;\n        }\n        else\n        {\n            this._font.name = value.name;\n            this._font.size = typeof value.size === 'number' ? value.size : parseInt(value.size, 10);\n        }\n\n        this.dirty = true;\n    }\n\n    /**\n     * The text of the BitmapText object.\n     *\n     * @member {string}\n     */\n    get text()\n    {\n        return this._text;\n    }\n\n    set text(text) // eslint-disable-line require-jsdoc\n    {\n        text = String(text === null || text === undefined ? '' : text);\n\n        if (this._text === text)\n        {\n            return;\n        }\n        this._text = text;\n        this.dirty = true;\n    }\n\n    /**\n     * The max width of this bitmap text in pixels. If the text provided is longer than the\n     * value provided, line breaks will be automatically inserted in the last whitespace.\n     * Disable by setting the value to 0.\n     *\n     * @member {number}\n     */\n    get maxWidth()\n    {\n        return this._maxWidth;\n    }\n\n    set maxWidth(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._maxWidth === value)\n        {\n            return;\n        }\n        this._maxWidth = value;\n        this.dirty = true;\n    }\n\n    /**\n     * The max line height. This is useful when trying to use the total height of the Text,\n     * i.e. when trying to vertically align.\n     *\n     * @member {number}\n     * @readonly\n     */\n    get maxLineHeight()\n    {\n        this.validate();\n\n        return this._maxLineHeight;\n    }\n\n    /**\n     * The width of the overall text, different from fontSize,\n     * which is defined in the style object.\n     *\n     * @member {number}\n     * @readonly\n     */\n    get textWidth()\n    {\n        this.validate();\n\n        return this._textWidth;\n    }\n\n    /**\n     * Additional space between characters.\n     *\n     * @member {number}\n     */\n    get letterSpacing()\n    {\n        return this._letterSpacing;\n    }\n\n    set letterSpacing(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._letterSpacing !== value)\n        {\n            this._letterSpacing = value;\n            this.dirty = true;\n        }\n    }\n\n    /**\n     * The height of the overall text, different from fontSize,\n     * which is defined in the style object.\n     *\n     * @member {number}\n     * @readonly\n     */\n    get textHeight()\n    {\n        this.validate();\n\n        return this._textHeight;\n    }\n\n    /**\n     * Register a bitmap font with data and a texture.\n     *\n     * @static\n     * @param {XMLDocument} xml - The XML document data.\n     * @param {Object.<string, PIXI.Texture>|PIXI.Texture|PIXI.Texture[]} textures - List of textures for each page.\n     *  If providing an object, the key is the `<page>` element's `file` attribute in the FNT file.\n     * @return {Object} Result font object with font, size, lineHeight and char fields.\n     */\n    static registerFont(xml, textures)\n    {\n        const data = {};\n        const info = xml.getElementsByTagName('info')[0];\n        const common = xml.getElementsByTagName('common')[0];\n        const pages = xml.getElementsByTagName('page');\n        const res = getResolutionOfUrl(pages[0].getAttribute('file'), settings.RESOLUTION);\n        const pagesTextures = {};\n\n        data.font = info.getAttribute('face');\n        data.size = parseInt(info.getAttribute('size'), 10);\n        data.lineHeight = parseInt(common.getAttribute('lineHeight'), 10) / res;\n        data.chars = {};\n\n        // Single texture, convert to list\n        if (textures instanceof Texture)\n        {\n            textures = [textures];\n        }\n\n        // Convert the input Texture, Textures or object\n        // into a page Texture lookup by \"id\"\n        for (let i = 0; i < pages.length; i++)\n        {\n            const id = pages[i].getAttribute('id');\n            const file = pages[i].getAttribute('file');\n\n            pagesTextures[id] = textures instanceof Array ? textures[i] : textures[file];\n        }\n\n        // parse letters\n        const letters = xml.getElementsByTagName('char');\n\n        for (let i = 0; i < letters.length; i++)\n        {\n            const letter = letters[i];\n            const charCode = parseInt(letter.getAttribute('id'), 10);\n            const page = letter.getAttribute('page') || 0;\n            const textureRect = new Rectangle(\n                (parseInt(letter.getAttribute('x'), 10) / res) + (pagesTextures[page].frame.x / res),\n                (parseInt(letter.getAttribute('y'), 10) / res) + (pagesTextures[page].frame.y / res),\n                parseInt(letter.getAttribute('width'), 10) / res,\n                parseInt(letter.getAttribute('height'), 10) / res\n            );\n\n            data.chars[charCode] = {\n                xOffset: parseInt(letter.getAttribute('xoffset'), 10) / res,\n                yOffset: parseInt(letter.getAttribute('yoffset'), 10) / res,\n                xAdvance: parseInt(letter.getAttribute('xadvance'), 10) / res,\n                kerning: {},\n                texture: new Texture(pagesTextures[page].baseTexture, textureRect),\n                page,\n            };\n        }\n\n        // parse kernings\n        const kernings = xml.getElementsByTagName('kerning');\n\n        for (let i = 0; i < kernings.length; i++)\n        {\n            const kerning = kernings[i];\n            const first = parseInt(kerning.getAttribute('first'), 10) / res;\n            const second = parseInt(kerning.getAttribute('second'), 10) / res;\n            const amount = parseInt(kerning.getAttribute('amount'), 10) / res;\n\n            if (data.chars[second])\n            {\n                data.chars[second].kerning[first] = amount;\n            }\n        }\n\n        // I'm leaving this as a temporary fix so we can test the bitmap fonts in v3\n        // but it's very likely to change\n        BitmapText.fonts[data.font] = data;\n\n        return data;\n    }\n}\n\nBitmapText.fonts = {};\n","import { LoaderResource } from '@pixi/loaders';\nimport { BitmapText } from './BitmapText';\n\n/**\n * {@link PIXI.Loader Loader} middleware for loading\n * bitmap-based fonts suitable for using with {@link PIXI.BitmapText}.\n * @class\n * @memberof PIXI\n * @implements PIXI.ILoaderPlugin\n */\nexport class BitmapFontLoader\n{\n    /**\n     * Register a BitmapText font from loader resource.\n     *\n     * @param {PIXI.LoaderResource} resource - Loader resource.\n     * @param {PIXI.Texture} texture - Reference to texture.\n     */\n    static parse(resource, texture)\n    {\n        resource.bitmapFont = BitmapText.registerFont(resource.data, texture);\n    }\n\n    /**\n     * Called when the plugin is installed.\n     *\n     * @see PIXI.Loader.registerPlugin\n     */\n    static add()\n    {\n        LoaderResource.setExtensionXhrType('fnt', LoaderResource.XHR_RESPONSE_TYPE.DOCUMENT);\n    }\n\n    /**\n     * Replacement for NodeJS's path.dirname\n     * @private\n     * @param {string} url Path to get directory for\n     */\n    static dirname(url)\n    {\n        const dir = url\n            .replace(/\\\\/g, '/') // convert windows notation to UNIX notation, URL-safe because it's a forbidden character\n            .replace(/\\/$/, '') // replace trailing slash\n            .replace(/\\/[^\\/]*$/, ''); // remove everything after the last\n\n        // File request is relative, use current directory\n        if (dir === url)\n        {\n            return '.';\n        }\n        // Started with a slash\n        else if (dir === '')\n        {\n            return '/';\n        }\n\n        return dir;\n    }\n\n    /**\n     * Called after a resource is loaded.\n     * @see PIXI.Loader.loaderMiddleware\n     * @param {PIXI.LoaderResource} resource\n     * @param {function} next\n     */\n    static use(resource, next)\n    {\n        // skip if no data or not xml data\n        if (!resource.data || resource.type !== LoaderResource.TYPE.XML)\n        {\n            next();\n\n            return;\n        }\n\n        // skip if not bitmap font data, using some silly duck-typing\n        if (resource.data.getElementsByTagName('page').length === 0\n            || resource.data.getElementsByTagName('info').length === 0\n            || resource.data.getElementsByTagName('info')[0].getAttribute('face') === null\n        )\n        {\n            next();\n\n            return;\n        }\n\n        let xmlUrl = !resource.isDataUrl ? BitmapFontLoader.dirname(resource.url) : '';\n\n        if (resource.isDataUrl)\n        {\n            if (xmlUrl === '.')\n            {\n                xmlUrl = '';\n            }\n\n            if (this.baseUrl && xmlUrl)\n            {\n                // if baseurl has a trailing slash then add one to xmlUrl so the replace works below\n                if (this.baseUrl.charAt(this.baseUrl.length - 1) === '/')\n                {\n                    xmlUrl += '/';\n                }\n            }\n        }\n\n        // remove baseUrl from xmlUrl\n        xmlUrl = xmlUrl.replace(this.baseUrl, '');\n\n        // if there is an xmlUrl now, it needs a trailing slash. Ensure that it does if the string isn't empty.\n        if (xmlUrl && xmlUrl.charAt(xmlUrl.length - 1) !== '/')\n        {\n            xmlUrl += '/';\n        }\n\n        const pages = resource.data.getElementsByTagName('page');\n        const textures = {};\n\n        // Handle completed, when the number of textures\n        // load is the same number as references in the fnt file\n        const completed = (page) =>\n        {\n            textures[page.metadata.pageFile] = page.texture;\n\n            if (Object.keys(textures).length === pages.length)\n            {\n                BitmapFontLoader.parse(resource, textures);\n                next();\n            }\n        };\n\n        for (let i = 0; i < pages.length; ++i)\n        {\n            const pageFile = pages[i].getAttribute('file');\n            const url = xmlUrl + pageFile;\n            let exists = false;\n\n            // incase the image is loaded outside\n            // using the same loader, resource will be available\n            for (const name in this.resources)\n            {\n                const bitmapResource = this.resources[name];\n\n                if (bitmapResource.url === url)\n                {\n                    bitmapResource.metadata.pageFile = pageFile;\n                    if (bitmapResource.texture)\n                    {\n                        completed(bitmapResource);\n                    }\n                    else\n                    {\n                        bitmapResource.onAfterMiddleware.add(completed);\n                    }\n                    exists = true;\n                    break;\n                }\n            }\n\n            // texture is not loaded, we'll attempt to add\n            // it to the load and add the texture to the list\n            if (!exists)\n            {\n                // Standard loading options for images\n                const options = {\n                    crossOrigin: resource.crossOrigin,\n                    loadType: LoaderResource.LOAD_TYPE.IMAGE,\n                    metadata: Object.assign(\n                        { pageFile },\n                        resource.metadata.imageMetadata\n                    ),\n                    parentResource: resource,\n                };\n\n                this.add(url, options, completed);\n            }\n        }\n    }\n}\n"],"names":["super","ObservablePoint","this","settings","const","Point","let","removeItems","i","Sprite","getResolutionOfUrl","Texture","Rectangle","Container","LoaderResource"],"mappings":"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"}