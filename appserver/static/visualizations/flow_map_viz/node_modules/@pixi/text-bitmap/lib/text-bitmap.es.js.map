{"version":3,"file":"text-bitmap.es.js","sources":["../src/BitmapText.js","../src/BitmapFontLoader.js"],"sourcesContent":["import { Texture } from '@pixi/core';\nimport { Container } from '@pixi/display';\nimport { ObservablePoint, Point, Rectangle } from '@pixi/math';\nimport { settings } from '@pixi/settings';\nimport { Sprite } from '@pixi/sprite';\nimport { removeItems, getResolutionOfUrl } from '@pixi/utils';\n\n/**\n * A BitmapText object will create a line or multiple lines of text using bitmap font.\n *\n * The primary advantage of this class over Text is that all of your textures are pre-generated and loading,\n * meaning that rendering is fast, and changing text has no performance implications.\n *\n * The primary disadvantage is that you need to preload the bitmap font assets, and thus the styling is set in stone.\n * Supporting character sets other than latin, such as CJK languages, may be impractical due to the number of characters.\n *\n * To split a line you can use '\\n', '\\r' or '\\r\\n' in your string.\n *\n * You can generate the fnt files using\n * http://www.angelcode.com/products/bmfont/ for Windows or\n * http://www.bmglyph.com/ for Mac.\n *\n * A BitmapText can only be created when the font is loaded.\n *\n * ```js\n * // in this case the font is in a file called 'desyrel.fnt'\n * let bitmapText = new PIXI.BitmapText(\"text using a fancy font!\", {font: \"35px Desyrel\", align: \"right\"});\n * ```\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\nexport class BitmapText extends Container\n{\n    /**\n     * @param {string} text - A string that you would like the text to display.\n     * @param {object} style - The style parameters.\n     * @param {string|object} style.font - The font descriptor for the object, can be passed as a string of form\n     *      \"24px FontName\" or \"FontName\" or as an object with explicit name/size properties.\n     * @param {string} [style.font.name] - The bitmap font id.\n     * @param {number} [style.font.size] - The size of the font in pixels, e.g. 24\n     * @param {string} [style.align='left'] - Alignment for multiline text ('left', 'center' or 'right'), does not affect\n     *      single line text.\n     * @param {number} [style.tint=0xFFFFFF] - The tint color.\n     */\n    constructor(text, style = {})\n    {\n        super();\n\n        /**\n         * Private tracker for the width of the overall text\n         *\n         * @member {number}\n         * @private\n         */\n        this._textWidth = 0;\n\n        /**\n         * Private tracker for the height of the overall text\n         *\n         * @member {number}\n         * @private\n         */\n        this._textHeight = 0;\n\n        /**\n         * Private tracker for the letter sprite pool.\n         *\n         * @member {PIXI.Sprite[]}\n         * @private\n         */\n        this._glyphs = [];\n\n        /**\n         * Private tracker for the current style.\n         *\n         * @member {object}\n         * @private\n         */\n        this._font = {\n            tint: style.tint !== undefined ? style.tint : 0xFFFFFF,\n            align: style.align || 'left',\n            name: null,\n            size: 0,\n        };\n\n        /**\n         * Private tracker for the current font.\n         *\n         * @member {object}\n         * @private\n         */\n        this.font = style.font; // run font setter\n\n        /**\n         * Private tracker for the current text.\n         *\n         * @member {string}\n         * @private\n         */\n        this._text = text;\n\n        /**\n         * The max width of this bitmap text in pixels. If the text provided is longer than the\n         * value provided, line breaks will be automatically inserted in the last whitespace.\n         * Disable by setting value to 0\n         *\n         * @member {number}\n         * @private\n         */\n        this._maxWidth = 0;\n\n        /**\n         * The max line height. This is useful when trying to use the total height of the Text,\n         * ie: when trying to vertically align.\n         *\n         * @member {number}\n         * @private\n         */\n        this._maxLineHeight = 0;\n\n        /**\n         * Letter spacing. This is useful for setting the space between characters.\n         * @member {number}\n         * @private\n         */\n        this._letterSpacing = 0;\n\n        /**\n         * Text anchor. read-only\n         *\n         * @member {PIXI.ObservablePoint}\n         * @private\n         */\n        this._anchor = new ObservablePoint(() => { this.dirty = true; }, this, 0, 0);\n\n        /**\n         * The dirty state of this object.\n         *\n         * @member {boolean}\n         */\n        this.dirty = false;\n\n        /**\n         * If true PixiJS will Math.floor() x/y values when rendering, stopping pixel interpolation.\n         * Advantages can include sharper image quality (like text) and faster rendering on canvas.\n         * The main disadvantage is movement of objects may appear less smooth.\n         * To set the global default, change {@link PIXI.settings.ROUND_PIXELS}\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.roundPixels = settings.ROUND_PIXELS;\n\n        this.updateText();\n    }\n\n    /**\n     * Renders text and updates it when needed\n     *\n     * @private\n     */\n    updateText()\n    {\n        const data = BitmapText.fonts[this._font.name];\n        const scale = this._font.size / data.size;\n        const pos = new Point();\n        const chars = [];\n        const lineWidths = [];\n        const text = this._text.replace(/(?:\\r\\n|\\r)/g, '\\n') || ' ';\n        const textLength = text.length;\n        const maxWidth = this._maxWidth * data.size / this._font.size;\n\n        let prevCharCode = null;\n        let lastLineWidth = 0;\n        let maxLineWidth = 0;\n        let line = 0;\n        let lastBreakPos = -1;\n        let lastBreakWidth = 0;\n        let spacesRemoved = 0;\n        let maxLineHeight = 0;\n\n        for (let i = 0; i < textLength; i++)\n        {\n            const charCode = text.charCodeAt(i);\n            const char = text.charAt(i);\n\n            if ((/(?:\\s)/).test(char))\n            {\n                lastBreakPos = i;\n                lastBreakWidth = lastLineWidth;\n            }\n\n            if (char === '\\r' || char === '\\n')\n            {\n                lineWidths.push(lastLineWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n                ++line;\n                ++spacesRemoved;\n\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n                continue;\n            }\n\n            const charData = data.chars[charCode];\n\n            if (!charData)\n            {\n                continue;\n            }\n\n            if (prevCharCode && charData.kerning[prevCharCode])\n            {\n                pos.x += charData.kerning[prevCharCode];\n            }\n\n            chars.push({\n                texture: charData.texture,\n                line,\n                charCode,\n                position: new Point(pos.x + charData.xOffset + (this._letterSpacing / 2), pos.y + charData.yOffset),\n            });\n            pos.x += charData.xAdvance + this._letterSpacing;\n            lastLineWidth = pos.x;\n            maxLineHeight = Math.max(maxLineHeight, (charData.yOffset + charData.texture.height));\n            prevCharCode = charCode;\n\n            if (lastBreakPos !== -1 && maxWidth > 0 && pos.x > maxWidth)\n            {\n                ++spacesRemoved;\n                removeItems(chars, 1 + lastBreakPos - spacesRemoved, 1 + i - lastBreakPos);\n                i = lastBreakPos;\n                lastBreakPos = -1;\n\n                lineWidths.push(lastBreakWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastBreakWidth);\n                line++;\n\n                pos.x = 0;\n                pos.y += data.lineHeight;\n                prevCharCode = null;\n            }\n        }\n\n        const lastChar = text.charAt(text.length - 1);\n\n        if (lastChar !== '\\r' && lastChar !== '\\n')\n        {\n            if ((/(?:\\s)/).test(lastChar))\n            {\n                lastLineWidth = lastBreakWidth;\n            }\n\n            lineWidths.push(lastLineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n        }\n\n        const lineAlignOffsets = [];\n\n        for (let i = 0; i <= line; i++)\n        {\n            let alignOffset = 0;\n\n            if (this._font.align === 'right')\n            {\n                alignOffset = maxLineWidth - lineWidths[i];\n            }\n            else if (this._font.align === 'center')\n            {\n                alignOffset = (maxLineWidth - lineWidths[i]) / 2;\n            }\n\n            lineAlignOffsets.push(alignOffset);\n        }\n\n        const lenChars = chars.length;\n        const tint = this.tint;\n\n        for (let i = 0; i < lenChars; i++)\n        {\n            let c = this._glyphs[i]; // get the next glyph sprite\n\n            if (c)\n            {\n                c.texture = chars[i].texture;\n            }\n            else\n            {\n                c = new Sprite(chars[i].texture);\n                c.roundPixels = this.roundPixels;\n                this._glyphs.push(c);\n            }\n\n            c.position.x = (chars[i].position.x + lineAlignOffsets[chars[i].line]) * scale;\n            c.position.y = chars[i].position.y * scale;\n            c.scale.x = c.scale.y = scale;\n            c.tint = tint;\n\n            if (!c.parent)\n            {\n                this.addChild(c);\n            }\n        }\n\n        // remove unnecessary children.\n        for (let i = lenChars; i < this._glyphs.length; ++i)\n        {\n            this.removeChild(this._glyphs[i]);\n        }\n\n        this._textWidth = maxLineWidth * scale;\n        this._textHeight = (pos.y + data.lineHeight) * scale;\n\n        // apply anchor\n        if (this.anchor.x !== 0 || this.anchor.y !== 0)\n        {\n            for (let i = 0; i < lenChars; i++)\n            {\n                this._glyphs[i].x -= this._textWidth * this.anchor.x;\n                this._glyphs[i].y -= this._textHeight * this.anchor.y;\n            }\n        }\n        this._maxLineHeight = maxLineHeight * scale;\n    }\n\n    /**\n     * Updates the transform of this object\n     *\n     * @private\n     */\n    updateTransform()\n    {\n        this.validate();\n        this.containerUpdateTransform();\n    }\n\n    /**\n     * Validates text before calling parent's getLocalBounds\n     *\n     * @return {PIXI.Rectangle} The rectangular bounding area\n     */\n    getLocalBounds()\n    {\n        this.validate();\n\n        return super.getLocalBounds();\n    }\n\n    /**\n     * Updates text when needed\n     *\n     * @private\n     */\n    validate()\n    {\n        if (this.dirty)\n        {\n            this.updateText();\n            this.dirty = false;\n        }\n    }\n\n    /**\n     * The tint of the BitmapText object.\n     *\n     * @member {number}\n     */\n    get tint()\n    {\n        return this._font.tint;\n    }\n\n    set tint(value) // eslint-disable-line require-jsdoc\n    {\n        this._font.tint = (typeof value === 'number' && value >= 0) ? value : 0xFFFFFF;\n\n        this.dirty = true;\n    }\n\n    /**\n     * The alignment of the BitmapText object.\n     *\n     * @member {string}\n     * @default 'left'\n     */\n    get align()\n    {\n        return this._font.align;\n    }\n\n    set align(value) // eslint-disable-line require-jsdoc\n    {\n        this._font.align = value || 'left';\n\n        this.dirty = true;\n    }\n\n    /**\n     * The anchor sets the origin point of the text.\n     *\n     * The default is `(0,0)`, this means the text's origin is the top left.\n     *\n     * Setting the anchor to `(0.5,0.5)` means the text's origin is centered.\n     *\n     * Setting the anchor to `(1,1)` would mean the text's origin point will be the bottom right corner.\n     *\n     * @member {PIXI.Point | number}\n     */\n    get anchor()\n    {\n        return this._anchor;\n    }\n\n    set anchor(value) // eslint-disable-line require-jsdoc\n    {\n        if (typeof value === 'number')\n        {\n            this._anchor.set(value);\n        }\n        else\n        {\n            this._anchor.copyFrom(value);\n        }\n    }\n\n    /**\n     * The font descriptor of the BitmapText object.\n     *\n     * @member {object}\n     */\n    get font()\n    {\n        return this._font;\n    }\n\n    set font(value) // eslint-disable-line require-jsdoc\n    {\n        if (!value)\n        {\n            return;\n        }\n\n        if (typeof value === 'string')\n        {\n            value = value.split(' ');\n\n            this._font.name = value.length === 1 ? value[0] : value.slice(1).join(' ');\n            this._font.size = value.length >= 2 ? parseInt(value[0], 10) : BitmapText.fonts[this._font.name].size;\n        }\n        else\n        {\n            this._font.name = value.name;\n            this._font.size = typeof value.size === 'number' ? value.size : parseInt(value.size, 10);\n        }\n\n        this.dirty = true;\n    }\n\n    /**\n     * The text of the BitmapText object.\n     *\n     * @member {string}\n     */\n    get text()\n    {\n        return this._text;\n    }\n\n    set text(text) // eslint-disable-line require-jsdoc\n    {\n        text = String(text === null || text === undefined ? '' : text);\n\n        if (this._text === text)\n        {\n            return;\n        }\n        this._text = text;\n        this.dirty = true;\n    }\n\n    /**\n     * The max width of this bitmap text in pixels. If the text provided is longer than the\n     * value provided, line breaks will be automatically inserted in the last whitespace.\n     * Disable by setting the value to 0.\n     *\n     * @member {number}\n     */\n    get maxWidth()\n    {\n        return this._maxWidth;\n    }\n\n    set maxWidth(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._maxWidth === value)\n        {\n            return;\n        }\n        this._maxWidth = value;\n        this.dirty = true;\n    }\n\n    /**\n     * The max line height. This is useful when trying to use the total height of the Text,\n     * i.e. when trying to vertically align.\n     *\n     * @member {number}\n     * @readonly\n     */\n    get maxLineHeight()\n    {\n        this.validate();\n\n        return this._maxLineHeight;\n    }\n\n    /**\n     * The width of the overall text, different from fontSize,\n     * which is defined in the style object.\n     *\n     * @member {number}\n     * @readonly\n     */\n    get textWidth()\n    {\n        this.validate();\n\n        return this._textWidth;\n    }\n\n    /**\n     * Additional space between characters.\n     *\n     * @member {number}\n     */\n    get letterSpacing()\n    {\n        return this._letterSpacing;\n    }\n\n    set letterSpacing(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._letterSpacing !== value)\n        {\n            this._letterSpacing = value;\n            this.dirty = true;\n        }\n    }\n\n    /**\n     * The height of the overall text, different from fontSize,\n     * which is defined in the style object.\n     *\n     * @member {number}\n     * @readonly\n     */\n    get textHeight()\n    {\n        this.validate();\n\n        return this._textHeight;\n    }\n\n    /**\n     * Register a bitmap font with data and a texture.\n     *\n     * @static\n     * @param {XMLDocument} xml - The XML document data.\n     * @param {Object.<string, PIXI.Texture>|PIXI.Texture|PIXI.Texture[]} textures - List of textures for each page.\n     *  If providing an object, the key is the `<page>` element's `file` attribute in the FNT file.\n     * @return {Object} Result font object with font, size, lineHeight and char fields.\n     */\n    static registerFont(xml, textures)\n    {\n        const data = {};\n        const info = xml.getElementsByTagName('info')[0];\n        const common = xml.getElementsByTagName('common')[0];\n        const pages = xml.getElementsByTagName('page');\n        const res = getResolutionOfUrl(pages[0].getAttribute('file'), settings.RESOLUTION);\n        const pagesTextures = {};\n\n        data.font = info.getAttribute('face');\n        data.size = parseInt(info.getAttribute('size'), 10);\n        data.lineHeight = parseInt(common.getAttribute('lineHeight'), 10) / res;\n        data.chars = {};\n\n        // Single texture, convert to list\n        if (textures instanceof Texture)\n        {\n            textures = [textures];\n        }\n\n        // Convert the input Texture, Textures or object\n        // into a page Texture lookup by \"id\"\n        for (let i = 0; i < pages.length; i++)\n        {\n            const id = pages[i].getAttribute('id');\n            const file = pages[i].getAttribute('file');\n\n            pagesTextures[id] = textures instanceof Array ? textures[i] : textures[file];\n        }\n\n        // parse letters\n        const letters = xml.getElementsByTagName('char');\n\n        for (let i = 0; i < letters.length; i++)\n        {\n            const letter = letters[i];\n            const charCode = parseInt(letter.getAttribute('id'), 10);\n            const page = letter.getAttribute('page') || 0;\n            const textureRect = new Rectangle(\n                (parseInt(letter.getAttribute('x'), 10) / res) + (pagesTextures[page].frame.x / res),\n                (parseInt(letter.getAttribute('y'), 10) / res) + (pagesTextures[page].frame.y / res),\n                parseInt(letter.getAttribute('width'), 10) / res,\n                parseInt(letter.getAttribute('height'), 10) / res\n            );\n\n            data.chars[charCode] = {\n                xOffset: parseInt(letter.getAttribute('xoffset'), 10) / res,\n                yOffset: parseInt(letter.getAttribute('yoffset'), 10) / res,\n                xAdvance: parseInt(letter.getAttribute('xadvance'), 10) / res,\n                kerning: {},\n                texture: new Texture(pagesTextures[page].baseTexture, textureRect),\n                page,\n            };\n        }\n\n        // parse kernings\n        const kernings = xml.getElementsByTagName('kerning');\n\n        for (let i = 0; i < kernings.length; i++)\n        {\n            const kerning = kernings[i];\n            const first = parseInt(kerning.getAttribute('first'), 10) / res;\n            const second = parseInt(kerning.getAttribute('second'), 10) / res;\n            const amount = parseInt(kerning.getAttribute('amount'), 10) / res;\n\n            if (data.chars[second])\n            {\n                data.chars[second].kerning[first] = amount;\n            }\n        }\n\n        // I'm leaving this as a temporary fix so we can test the bitmap fonts in v3\n        // but it's very likely to change\n        BitmapText.fonts[data.font] = data;\n\n        return data;\n    }\n}\n\nBitmapText.fonts = {};\n","import { LoaderResource } from '@pixi/loaders';\nimport { BitmapText } from './BitmapText';\n\n/**\n * {@link PIXI.Loader Loader} middleware for loading\n * bitmap-based fonts suitable for using with {@link PIXI.BitmapText}.\n * @class\n * @memberof PIXI\n * @implements PIXI.ILoaderPlugin\n */\nexport class BitmapFontLoader\n{\n    /**\n     * Register a BitmapText font from loader resource.\n     *\n     * @param {PIXI.LoaderResource} resource - Loader resource.\n     * @param {PIXI.Texture} texture - Reference to texture.\n     */\n    static parse(resource, texture)\n    {\n        resource.bitmapFont = BitmapText.registerFont(resource.data, texture);\n    }\n\n    /**\n     * Called when the plugin is installed.\n     *\n     * @see PIXI.Loader.registerPlugin\n     */\n    static add()\n    {\n        LoaderResource.setExtensionXhrType('fnt', LoaderResource.XHR_RESPONSE_TYPE.DOCUMENT);\n    }\n\n    /**\n     * Replacement for NodeJS's path.dirname\n     * @private\n     * @param {string} url Path to get directory for\n     */\n    static dirname(url)\n    {\n        const dir = url\n            .replace(/\\\\/g, '/') // convert windows notation to UNIX notation, URL-safe because it's a forbidden character\n            .replace(/\\/$/, '') // replace trailing slash\n            .replace(/\\/[^\\/]*$/, ''); // remove everything after the last\n\n        // File request is relative, use current directory\n        if (dir === url)\n        {\n            return '.';\n        }\n        // Started with a slash\n        else if (dir === '')\n        {\n            return '/';\n        }\n\n        return dir;\n    }\n\n    /**\n     * Called after a resource is loaded.\n     * @see PIXI.Loader.loaderMiddleware\n     * @param {PIXI.LoaderResource} resource\n     * @param {function} next\n     */\n    static use(resource, next)\n    {\n        // skip if no data or not xml data\n        if (!resource.data || resource.type !== LoaderResource.TYPE.XML)\n        {\n            next();\n\n            return;\n        }\n\n        // skip if not bitmap font data, using some silly duck-typing\n        if (resource.data.getElementsByTagName('page').length === 0\n            || resource.data.getElementsByTagName('info').length === 0\n            || resource.data.getElementsByTagName('info')[0].getAttribute('face') === null\n        )\n        {\n            next();\n\n            return;\n        }\n\n        let xmlUrl = !resource.isDataUrl ? BitmapFontLoader.dirname(resource.url) : '';\n\n        if (resource.isDataUrl)\n        {\n            if (xmlUrl === '.')\n            {\n                xmlUrl = '';\n            }\n\n            if (this.baseUrl && xmlUrl)\n            {\n                // if baseurl has a trailing slash then add one to xmlUrl so the replace works below\n                if (this.baseUrl.charAt(this.baseUrl.length - 1) === '/')\n                {\n                    xmlUrl += '/';\n                }\n            }\n        }\n\n        // remove baseUrl from xmlUrl\n        xmlUrl = xmlUrl.replace(this.baseUrl, '');\n\n        // if there is an xmlUrl now, it needs a trailing slash. Ensure that it does if the string isn't empty.\n        if (xmlUrl && xmlUrl.charAt(xmlUrl.length - 1) !== '/')\n        {\n            xmlUrl += '/';\n        }\n\n        const pages = resource.data.getElementsByTagName('page');\n        const textures = {};\n\n        // Handle completed, when the number of textures\n        // load is the same number as references in the fnt file\n        const completed = (page) =>\n        {\n            textures[page.metadata.pageFile] = page.texture;\n\n            if (Object.keys(textures).length === pages.length)\n            {\n                BitmapFontLoader.parse(resource, textures);\n                next();\n            }\n        };\n\n        for (let i = 0; i < pages.length; ++i)\n        {\n            const pageFile = pages[i].getAttribute('file');\n            const url = xmlUrl + pageFile;\n            let exists = false;\n\n            // incase the image is loaded outside\n            // using the same loader, resource will be available\n            for (const name in this.resources)\n            {\n                const bitmapResource = this.resources[name];\n\n                if (bitmapResource.url === url)\n                {\n                    bitmapResource.metadata.pageFile = pageFile;\n                    if (bitmapResource.texture)\n                    {\n                        completed(bitmapResource);\n                    }\n                    else\n                    {\n                        bitmapResource.onAfterMiddleware.add(completed);\n                    }\n                    exists = true;\n                    break;\n                }\n            }\n\n            // texture is not loaded, we'll attempt to add\n            // it to the load and add the texture to the list\n            if (!exists)\n            {\n                // Standard loading options for images\n                const options = {\n                    crossOrigin: resource.crossOrigin,\n                    loadType: LoaderResource.LOAD_TYPE.IMAGE,\n                    metadata: Object.assign(\n                        { pageFile },\n                        resource.metadata.imageMetadata\n                    ),\n                    parentResource: resource,\n                };\n\n                this.add(url, options, completed);\n            }\n        }\n    }\n}\n"],"names":["super","this","const","let","i"],"mappings":"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"}