{"version":3,"file":"settings.min.js","sources":["../../../node_modules/ismobilejs/src/isMobile.ts","../src/utils/isMobile.js","../src/settings.js","../src/utils/maxRecommendedTextures.js","../src/utils/canUploadSameBuffer.js"],"sourcesContent":["const appleIphone = /iPhone/i;\nconst appleIpod = /iPod/i;\nconst appleTablet = /iPad/i;\nconst androidPhone = /\\bAndroid(?:.+)Mobile\\b/i; // Match 'Android' AND 'Mobile'\nconst androidTablet = /Android/i;\nconst amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i; // Match 'Silk' AND 'Mobile'\nconst amazonTablet = /Silk/i;\nconst windowsPhone = /Windows Phone/i;\nconst windowsTablet = /\\bWindows(?:.+)ARM\\b/i; // Match 'Windows' AND 'ARM'\nconst otherBlackBerry = /BlackBerry/i;\nconst otherBlackBerry10 = /BB10/i;\nconst otherOpera = /Opera Mini/i;\nconst otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nconst otherFirefox = /Mobile(?:.+)Firefox\\b/i; // Match 'Mobile' AND 'Firefox'\n\nfunction match(regex: RegExp, userAgent: string): boolean {\n  return regex.test(userAgent);\n}\n\nexport type isMobileResult = {\n  apple: {\n    phone: boolean;\n    ipod: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  amazon: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  android: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  windows: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  other: {\n    blackberry: boolean;\n    blackberry10: boolean;\n    opera: boolean;\n    firefox: boolean;\n    chrome: boolean;\n    device: boolean;\n  };\n  phone: boolean;\n  tablet: boolean;\n  any: boolean;\n};\n\nexport default function isMobile(userAgent?: string): isMobileResult {\n  /* eslint-disable no-param-reassign */\n  userAgent =\n    userAgent || (typeof navigator !== 'undefined' ? navigator.userAgent : '');\n\n  // Facebook mobile app's integrated browser adds a bunch of strings that\n  // match everything. Strip it out if it exists.\n  let tmp = userAgent.split('[FBAN');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n  // iPhone\" string. Same probably happens on other tablet platforms.\n  // This will confuse detection so strip it out if it exists.\n  tmp = userAgent.split('Twitter');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  const result: isMobileResult = {\n    apple: {\n      phone: match(appleIphone, userAgent) && !match(windowsPhone, userAgent),\n      ipod: match(appleIpod, userAgent),\n      tablet:\n        !match(appleIphone, userAgent) &&\n        match(appleTablet, userAgent) &&\n        !match(windowsPhone, userAgent),\n      device:\n        (match(appleIphone, userAgent) ||\n          match(appleIpod, userAgent) ||\n          match(appleTablet, userAgent)) &&\n        !match(windowsPhone, userAgent),\n    },\n    amazon: {\n      phone: match(amazonPhone, userAgent),\n      tablet: !match(amazonPhone, userAgent) && match(amazonTablet, userAgent),\n      device: match(amazonPhone, userAgent) || match(amazonTablet, userAgent),\n    },\n    android: {\n      phone:\n        (!match(windowsPhone, userAgent) && match(amazonPhone, userAgent)) ||\n        (!match(windowsPhone, userAgent) && match(androidPhone, userAgent)),\n      tablet:\n        !match(windowsPhone, userAgent) &&\n        !match(amazonPhone, userAgent) &&\n        !match(androidPhone, userAgent) &&\n        (match(amazonTablet, userAgent) || match(androidTablet, userAgent)),\n      device:\n        (!match(windowsPhone, userAgent) &&\n          (match(amazonPhone, userAgent) ||\n            match(amazonTablet, userAgent) ||\n            match(androidPhone, userAgent) ||\n            match(androidTablet, userAgent))) ||\n        match(/\\bokhttp\\b/i, userAgent),\n    },\n    windows: {\n      phone: match(windowsPhone, userAgent),\n      tablet: match(windowsTablet, userAgent),\n      device: match(windowsPhone, userAgent) || match(windowsTablet, userAgent),\n    },\n    other: {\n      blackberry: match(otherBlackBerry, userAgent),\n      blackberry10: match(otherBlackBerry10, userAgent),\n      opera: match(otherOpera, userAgent),\n      firefox: match(otherFirefox, userAgent),\n      chrome: match(otherChrome, userAgent),\n      device:\n        match(otherBlackBerry, userAgent) ||\n        match(otherBlackBerry10, userAgent) ||\n        match(otherOpera, userAgent) ||\n        match(otherFirefox, userAgent) ||\n        match(otherChrome, userAgent),\n    },\n    any: false,\n    phone: false,\n    tablet: false,\n  };\n\n  result.any =\n    result.apple.device ||\n    result.android.device ||\n    result.windows.device ||\n    result.other.device;\n  // excludes 'other' devices and ipods, targeting touchscreen phones\n  result.phone =\n    result.apple.phone || result.android.phone || result.windows.phone;\n  result.tablet =\n    result.apple.tablet || result.android.tablet || result.windows.tablet;\n\n  return result;\n}\n","// The ESM/CJS versions of ismobilejs only\n// exports the function for executing\n// designed for Node-only environments\nimport isMobileCall from 'ismobilejs';\n\nconst isMobile = isMobileCall();\n\nexport { isMobile };\n","import { isMobile } from './utils/isMobile';\nimport { maxRecommendedTextures } from './utils/maxRecommendedTextures';\nimport { canUploadSameBuffer } from './utils/canUploadSameBuffer';\n\n/**\n * User's customizable globals for overriding the default PIXI settings, such\n * as a renderer's default resolution, framerate, float precision, etc.\n * @example\n * // Use the native window resolution as the default resolution\n * // will support high-density displays when rendering\n * PIXI.settings.RESOLUTION = window.devicePixelRatio;\n *\n * // Disable interpolation when scaling, will make texture be pixelated\n * PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n * @namespace PIXI.settings\n */\nexport const settings = {\n\n    /**\n     * If set to true WebGL will attempt make textures mimpaped by default.\n     * Mipmapping will only succeed if the base texture uploaded has power of two dimensions.\n     *\n     * @static\n     * @name MIPMAP_TEXTURES\n     * @memberof PIXI.settings\n     * @type {PIXI.MIPMAP_MODES}\n     * @default PIXI.MIPMAP_MODES.POW2\n     */\n    MIPMAP_TEXTURES: 1,\n\n    /**\n     * Default anisotropic filtering level of textures.\n     * Usually from 0 to 16\n     *\n     * @static\n     * @name ANISOTROPIC_LEVEL\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 0\n     */\n    ANISOTROPIC_LEVEL: 0,\n\n    /**\n     * Default resolution / device pixel ratio of the renderer.\n     *\n     * @static\n     * @name RESOLUTION\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 1\n     */\n    RESOLUTION: 1,\n\n    /**\n     * Default filter resolution.\n     *\n     * @static\n     * @name FILTER_RESOLUTION\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 1\n     */\n    FILTER_RESOLUTION: 1,\n\n    /**\n     * The maximum textures that this device supports.\n     *\n     * @static\n     * @name SPRITE_MAX_TEXTURES\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 32\n     */\n    SPRITE_MAX_TEXTURES: maxRecommendedTextures(32),\n\n    // TODO: maybe change to SPRITE.BATCH_SIZE: 2000\n    // TODO: maybe add PARTICLE.BATCH_SIZE: 15000\n\n    /**\n     * The default sprite batch size.\n     *\n     * The default aims to balance desktop and mobile devices.\n     *\n     * @static\n     * @name SPRITE_BATCH_SIZE\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 4096\n     */\n    SPRITE_BATCH_SIZE: 4096,\n\n    /**\n     * The default render options if none are supplied to {@link PIXI.Renderer}\n     * or {@link PIXI.CanvasRenderer}.\n     *\n     * @static\n     * @name RENDER_OPTIONS\n     * @memberof PIXI.settings\n     * @type {object}\n     * @property {HTMLCanvasElement} view=null\n     * @property {number} resolution=1\n     * @property {boolean} antialias=false\n     * @property {boolean} forceFXAA=false\n     * @property {boolean} autoDensity=false\n     * @property {boolean} transparent=false\n     * @property {number} backgroundColor=0x000000\n     * @property {boolean} clearBeforeRender=true\n     * @property {boolean} preserveDrawingBuffer=false\n     * @property {number} width=800\n     * @property {number} height=600\n     * @property {boolean} legacy=false\n     */\n    RENDER_OPTIONS: {\n        view: null,\n        antialias: false,\n        forceFXAA: false,\n        autoDensity: false,\n        transparent: false,\n        backgroundColor: 0x000000,\n        clearBeforeRender: true,\n        preserveDrawingBuffer: false,\n        width: 800,\n        height: 600,\n        legacy: false,\n    },\n\n    /**\n     * Default Garbage Collection mode.\n     *\n     * @static\n     * @name GC_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.GC_MODES}\n     * @default PIXI.GC_MODES.AUTO\n     */\n    GC_MODE: 0,\n\n    /**\n     * Default Garbage Collection max idle.\n     *\n     * @static\n     * @name GC_MAX_IDLE\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 3600\n     */\n    GC_MAX_IDLE: 60 * 60,\n\n    /**\n     * Default Garbage Collection maximum check count.\n     *\n     * @static\n     * @name GC_MAX_CHECK_COUNT\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 600\n     */\n    GC_MAX_CHECK_COUNT: 60 * 10,\n\n    /**\n     * Default wrap modes that are supported by pixi.\n     *\n     * @static\n     * @name WRAP_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.WRAP_MODES}\n     * @default PIXI.WRAP_MODES.CLAMP\n     */\n    WRAP_MODE: 33071,\n\n    /**\n     * Default scale mode for textures.\n     *\n     * @static\n     * @name SCALE_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.SCALE_MODES}\n     * @default PIXI.SCALE_MODES.LINEAR\n     */\n    SCALE_MODE: 1,\n\n    /**\n     * Default specify float precision in vertex shader.\n     *\n     * @static\n     * @name PRECISION_VERTEX\n     * @memberof PIXI.settings\n     * @type {PIXI.PRECISION}\n     * @default PIXI.PRECISION.HIGH\n     */\n    PRECISION_VERTEX: 'highp',\n\n    /**\n     * Default specify float precision in fragment shader.\n     * iOS is best set at highp due to https://github.com/pixijs/pixi.js/issues/3742\n     *\n     * @static\n     * @name PRECISION_FRAGMENT\n     * @memberof PIXI.settings\n     * @type {PIXI.PRECISION}\n     * @default PIXI.PRECISION.MEDIUM\n     */\n    PRECISION_FRAGMENT: isMobile.apple.device ? 'highp' : 'mediump',\n\n    /**\n     * Can we upload the same buffer in a single frame?\n     *\n     * @static\n     * @name CAN_UPLOAD_SAME_BUFFER\n     * @memberof PIXI.settings\n     * @type {boolean}\n     */\n    CAN_UPLOAD_SAME_BUFFER: canUploadSameBuffer(),\n\n    /**\n     * Enables bitmap creation before image load. This feature is experimental.\n     *\n     * @static\n     * @name CREATE_IMAGE_BITMAP\n     * @memberof PIXI.settings\n     * @type {boolean}\n     * @default false\n     */\n    CREATE_IMAGE_BITMAP: false,\n\n    /**\n     * If true PixiJS will Math.floor() x/y values when rendering, stopping pixel interpolation.\n     * Advantages can include sharper image quality (like text) and faster rendering on canvas.\n     * The main disadvantage is movement of objects may appear less smooth.\n     *\n     * @static\n     * @constant\n     * @memberof PIXI.settings\n     * @type {boolean}\n     * @default false\n     */\n    ROUND_PIXELS: false,\n};\n","import { isMobile } from './isMobile';\n\n/**\n * The maximum recommended texture units to use.\n * In theory the bigger the better, and for desktop we'll use as many as we can.\n * But some mobile devices slow down if there is to many branches in the shader.\n * So in practice there seems to be a sweet spot size that varies depending on the device.\n *\n * In v4, all mobile devices were limited to 4 texture units because for this.\n * In v5, we allow all texture units to be used on modern Apple or Android devices.\n *\n * @private\n * @param {number} max\n * @returns {number}\n */\nexport function maxRecommendedTextures(max)\n{\n    let allowMax = true;\n\n    if (isMobile.tablet || isMobile.phone)\n    {\n        allowMax = false;\n\n        if (isMobile.apple.device)\n        {\n            const match = (navigator.userAgent).match(/OS (\\d+)_(\\d+)?/);\n\n            if (match)\n            {\n                const majorVersion = parseInt(match[1], 10);\n\n                // All texture units can be used on devices that support ios 11 or above\n                if (majorVersion >= 11)\n                {\n                    allowMax = true;\n                }\n            }\n        }\n        if (isMobile.android.device)\n        {\n            const match = (navigator.userAgent).match(/Android\\s([0-9.]*)/);\n\n            if (match)\n            {\n                const majorVersion = parseInt(match[1], 10);\n\n                // All texture units can be used on devices that support Android 7 (Nougat) or above\n                if (majorVersion >= 7)\n                {\n                    allowMax = true;\n                }\n            }\n        }\n    }\n\n    return allowMax ? max : 4;\n}\n","import { isMobile } from './isMobile';\n\n/**\n * Uploading the same buffer multiple times in a single frame can cause performance issues.\n * Apparent on iOS so only check for that at the moment\n * This check may become more complex if this issue pops up elsewhere.\n *\n * @private\n * @returns {boolean}\n */\nexport function canUploadSameBuffer()\n{\n    return !isMobile.apple.device;\n}\n"],"names":["const","appleIphone","appleIpod","appleTablet","androidPhone","androidTablet","amazonPhone","amazonTablet","windowsPhone","windowsTablet","otherBlackBerry","otherBlackBerry10","otherOpera","otherChrome","otherFirefox","match","regex","userAgent","test","isMobile","let","tmp","navigator","split","result","apple","phone","ipod","tablet","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any","isMobileCall","settings","MIPMAP_TEXTURES","ANISOTROPIC_LEVEL","RESOLUTION","FILTER_RESOLUTION","SPRITE_MAX_TEXTURES","max","allowMax","parseInt","maxRecommendedTextures","SPRITE_BATCH_SIZE","RENDER_OPTIONS","view","antialias","forceFXAA","autoDensity","transparent","backgroundColor","clearBeforeRender","preserveDrawingBuffer","width","height","legacy","GC_MODE","GC_MAX_IDLE","GC_MAX_CHECK_COUNT","WRAP_MODE","SCALE_MODE","PRECISION_VERTEX","PRECISION_FRAGMENT","CAN_UPLOAD_SAME_BUFFER","CREATE_IMAGE_BITMAP","ROUND_PIXELS"],"mappings":"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"}