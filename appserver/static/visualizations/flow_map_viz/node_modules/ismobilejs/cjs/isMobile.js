"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const appleIphone = /iPhone/i;
const appleIpod = /iPod/i;
const appleTablet = /iPad/i;
const androidPhone = /\bAndroid(?:.+)Mobile\b/i;
const androidTablet = /Android/i;
const amazonPhone = /(?:SD4930UR|\bSilk(?:.+)Mobile\b)/i;
const amazonTablet = /Silk/i;
const windowsPhone = /Windows Phone/i;
const windowsTablet = /\bWindows(?:.+)ARM\b/i;
const otherBlackBerry = /BlackBerry/i;
const otherBlackBerry10 = /BB10/i;
const otherOpera = /Opera Mini/i;
const otherChrome = /\b(CriOS|Chrome)(?:.+)Mobile/i;
const otherFirefox = /Mobile(?:.+)Firefox\b/i;
function match(regex, userAgent) {
    return regex.test(userAgent);
}
function isMobile(userAgent) {
    userAgent =
        userAgent || (typeof navigator !== 'undefined' ? navigator.userAgent : '');
    let tmp = userAgent.split('[FBAN');
    if (typeof tmp[1] !== 'undefined') {
        userAgent = tmp[0];
    }
    tmp = userAgent.split('Twitter');
    if (typeof tmp[1] !== 'undefined') {
        userAgent = tmp[0];
    }
    const result = {
        apple: {
            phone: match(appleIphone, userAgent) && !match(windowsPhone, userAgent),
            ipod: match(appleIpod, userAgent),
            tablet: !match(appleIphone, userAgent) &&
                match(appleTablet, userAgent) &&
                !match(windowsPhone, userAgent),
            device: (match(appleIphone, userAgent) ||
                match(appleIpod, userAgent) ||
                match(appleTablet, userAgent)) &&
                !match(windowsPhone, userAgent),
        },
        amazon: {
            phone: match(amazonPhone, userAgent),
            tablet: !match(amazonPhone, userAgent) && match(amazonTablet, userAgent),
            device: match(amazonPhone, userAgent) || match(amazonTablet, userAgent),
        },
        android: {
            phone: (!match(windowsPhone, userAgent) && match(amazonPhone, userAgent)) ||
                (!match(windowsPhone, userAgent) && match(androidPhone, userAgent)),
            tablet: !match(windowsPhone, userAgent) &&
                !match(amazonPhone, userAgent) &&
                !match(androidPhone, userAgent) &&
                (match(amazonTablet, userAgent) || match(androidTablet, userAgent)),
            device: (!match(windowsPhone, userAgent) &&
                (match(amazonPhone, userAgent) ||
                    match(amazonTablet, userAgent) ||
                    match(androidPhone, userAgent) ||
                    match(androidTablet, userAgent))) ||
                match(/\bokhttp\b/i, userAgent),
        },
        windows: {
            phone: match(windowsPhone, userAgent),
            tablet: match(windowsTablet, userAgent),
            device: match(windowsPhone, userAgent) || match(windowsTablet, userAgent),
        },
        other: {
            blackberry: match(otherBlackBerry, userAgent),
            blackberry10: match(otherBlackBerry10, userAgent),
            opera: match(otherOpera, userAgent),
            firefox: match(otherFirefox, userAgent),
            chrome: match(otherChrome, userAgent),
            device: match(otherBlackBerry, userAgent) ||
                match(otherBlackBerry10, userAgent) ||
                match(otherOpera, userAgent) ||
                match(otherFirefox, userAgent) ||
                match(otherChrome, userAgent),
        },
        any: false,
        phone: false,
        tablet: false,
    };
    result.any =
        result.apple.device ||
            result.android.device ||
            result.windows.device ||
            result.other.device;
    result.phone =
        result.apple.phone || result.android.phone || result.windows.phone;
    result.tablet =
        result.apple.tablet || result.android.tablet || result.windows.tablet;
    return result;
}
exports.default = isMobile;
//# sourceMappingURL=isMobile.js.map